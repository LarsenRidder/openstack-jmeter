<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Networks Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(create_networks_group.loops)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(create_networks_group.threads)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(create_networks_group.rampup)}</stringProp>
        <longProp name="ThreadGroup.start_time">1330509288000</longProp>
        <longProp name="ThreadGroup.end_time">1330509288000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Get Current Timestamp" enabled="true">
          <stringProp name="filename">${__P(reports_dir)}/curr_timestamp.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">timestamp_dir</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">All threads</stringProp>
        </CSVDataSet>
        <hashTree/>
        <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="Create jmeter variables for nova-manage network create" enabled="true">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">host = props.get(&quot;host&quot;)
username = props.get(&quot;username&quot;)
password = props.get(&quot;password&quot;)
label = props.get(&quot;label&quot;)
bridge = props.get(&quot;bridge&quot;)
bridge_interface = props.get(&quot;bridge_interface&quot;)
nova_manage_path = props.get(&quot;nova_manage_path&quot;)
scripts_path = props.get(&quot;script_path&quot;)
tenants_file_dir = props.get(&quot;test_data_dir&quot;) + &quot;/&quot; + vars.get(&quot;timestamp_dir&quot;)

vars.put(&quot;host&quot;,host)
vars.put(&quot;username&quot;,username)
vars.put(&quot;password&quot;,password)
vars.put(&quot;label&quot;,label)
vars.put(&quot;bridge&quot;,bridge)
vars.put(&quot;bridge_interface&quot;,bridge_interface)
vars.put(&quot;nova_manage_path&quot;,nova_manage_path)
vars.put(&quot;scripts_path&quot;, scripts_path)
vars.put(&quot;tenants_file_dir&quot;, tenants_file_dir)</stringProp>
        </BSFPreProcessor>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Run nova-manage script" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ScriptPath" elementType="Argument">
                <stringProp name="Argument.name">ScriptPath</stringProp>
                <stringProp name="Argument.value">${__P(script_path)}/run_python_script.sh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Command" elementType="Argument">
                <stringProp name="Argument.name">Command</stringProp>
                <stringProp name="Argument.value">${__P(script_path)}/gen_networks.py:${host}:${username}:${password}:${bridge_interface}:${bridge}:${tenants_file_dir}:${nova_manage_path}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">ShellExecutor</stringProp>
        </JavaSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">true</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
